@startuml Clinical Letter Processing System Architecture

!theme plain
skinparam backgroundColor #FFFFFF
skinparam componentStyle rectangle

title **Clinical Letter Processing System - High Level Architecture**

package "**Frontend Layer**" as Frontend {
    [React Frontend] as React
    note right of React
        **User Interface**
        - PDF Upload Interface
        - View Processed Letters
        - Real-time Status Updates
        - Interactive Compliance Info
    end note
}

package "**API Gateway Layer**" as Gateway {
    [AWS API Gateway] as APIGateway
    note right of APIGateway
        **Security & Routing**
        - HTTPS/TLS Encryption
        - CORS Configuration
        - Request Validation
        - Rate Limiting
    end note
}

package "**Processing Layer**" as Processing {
    [Upload Lambda] as UploadLambda
    [Get Letters Lambda] as GetLambda
    [File Retrieval Lambda] as FileLambda
    
    note right of UploadLambda
        **Core Processing**
        - PDF Text Extraction
        - NHS Number Detection
        - PHI Detection & Masking
        - AI Analysis & Risk Assessment
    end note
}

package "**AI & Analysis Layer**" as AI {
    [OpenAI GPT] as OpenAI
    note right of OpenAI
        **Clinical Intelligence**
        - Medical Text Summarization
        - Risk Assessment Engine
        - Urgency Level Classification
        - Clinical Findings Extraction
    end note
}

package "**Storage Layer**" as Storage {
    database "S3 Bucket" as S3 {
        [Original PDFs] as PDFs
        [Audit Logs] as AuditLogs
    }
    
    database "DynamoDB" as DynamoDB {
        [Analysis Results] as Results
        [Patient Data] as PatientData
        [Processing Metadata] as Metadata
    }
    
    note right of S3
        **File Storage**
        - Original PDF Preservation
        - Secure Access Control
        - Audit Trail Maintenance
        - GDPR Compliance
    end note
    
    note right of DynamoDB
        **Data Storage**
        - Clinical Analysis Results
        - NHS Number Storage
        - Processing Timestamps
        - Risk Assessment Data
    end note
}

package "**Compliance Layer**" as Compliance {
    [GDPR Compliance] as GDPR
    [NHS Standards] as NHS
    [Audit Trail] as Audit
    
    note right of GDPR
        **Privacy Protection**
        - Data Minimization
        - Right to Erasure
        - Consent Management
        - Encryption Standards
    end note
    
    note right of NHS
        **Healthcare Standards**
        - NHS Number Validation
        - Clinical Data Handling
        - Medical Record Standards
        - Healthcare Security
    end note
}

' Data Flow Connections
actor "Clinician" as User

User --> React : Upload PDF Letters
React --> APIGateway : HTTPS Request
APIGateway --> UploadLambda : Route Request
UploadLambda --> S3 : Store Original PDF
UploadLambda --> OpenAI : Send Masked Text
OpenAI --> UploadLambda : Return Analysis
UploadLambda --> DynamoDB : Store Results
UploadLambda --> Compliance : Log Processing

React --> APIGateway : Get Letters Request
APIGateway --> GetLambda : Route Request
GetLambda --> DynamoDB : Query Results
DynamoDB --> GetLambda : Return Data
GetLambda --> APIGateway : Return Response
APIGateway --> React : Display Letters

React --> APIGateway : File Download Request
APIGateway --> FileLambda : Route Request
FileLambda --> S3 : Generate Pre-signed URL
S3 --> FileLambda : Return URL
FileLambda --> APIGateway : Return URL
APIGateway --> React : Download File

' Compliance monitoring
Compliance --> S3 : Monitor Access
Compliance --> DynamoDB : Monitor Changes
Compliance --> UploadLambda : Validate Processing

' Styling
skinparam component {
    BackgroundColor #E8F4FD
    BorderColor #0066CC
}

skinparam database {
    BackgroundColor #F0F8FF
    BorderColor #0066CC
}

skinparam package {
    BackgroundColor #F5F5F5
    BorderColor #666666
}

skinparam note {
    BackgroundColor #FFFACD
    BorderColor #FFD700
}

@enduml
